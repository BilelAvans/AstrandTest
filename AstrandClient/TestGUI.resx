<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XYdO9/9YceWX12BDCAAAAABJRU5ErkJggg==
</value>
  </data>
</root>